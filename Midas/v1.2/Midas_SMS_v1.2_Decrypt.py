import os
from Crypto.Cipher import AES
from Crypto.PublicKey import RSA

def load_rsa_private_key(private_key_file):
    with open(private_key_file, "rb") as file:
        private_key = file.read()
    return RSA.import_key(private_key)

def read_encrypted_key(file_path, rsa_private_key):
    with open(file_path + ".key", "rb") as key_file:
        encrypted_key = key_file.read()
    rsa_cipher = RSA.import_key(rsa_private_key)
    aes_key = rsa_cipher.decrypt(encrypted_key)
    return aes_key

def decrypt_file(file_path, aes_key):
    with open(file_path + ".gold", "rb") as file:
        encrypted_data = file.read()
    
    cipher = AES.new(aes_key, AES.MODE_ECB)
    decrypted_data = cipher.decrypt(encrypted_data)
    
    # Remove PKCS7 padding
    padding_length = decrypted_data[-1]
    decrypted_data = decrypted_data[:-padding_length]
    
    return decrypted_data

if __name__ == "__main__":
    target_directory = input("Enter the target directory: ")
    private_key_file = os.path.join(target_directory, "goldenticket.txt")
    files = os.listdir(target_directory)
    rsa_private_key = load_rsa_private_key(private_key_file)
    for file_name in files:
        if file_name.endswith(".gold"):
            file_path = os.path.join(target_directory, os.path.splitext(file_name)[0])
            aes_key = read_encrypted_key(file_path, rsa_private_key)
            decrypted_data = decrypt_file(file_path, aes_key)
            with open(file_path, "wb") as decrypted_file:
                decrypted_file.write(decrypted_data)
            os.remove(file_path + ".gold")
    print("File decryption completed.")